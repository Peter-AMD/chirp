import { LoadingSpinner } from "@/components";
import { api, type RouterOutputs } from "@/utils/api";
import { SignIn, SignOutButton, useUser } from "@clerk/nextjs";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import Head from "next/head";
import Image from "next/image";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  console.log("user", user);
  if (!user) {
    return null;
  }

  return (
    <div className="flex gap-3">
      <Image
        alt="profile image"
        className="h-16 w-16 rounded-full"
        src={user.profileImageUrl}
        width={48}
        height={48}
      />
      <input
        className="grow bg-transparent outline-none"
        placeholder="Type some emojis!"
      />
    </div>
  );
};

type PostWithUserType = RouterOutputs["posts"]["getAll"][number];

const PostView = (props: PostWithUserType) => {
  return (
    <li className="flex min-h-[66px] gap-6 p-6">
      <Image
        alt={`${props.author.username || ""} profile picture`}
        className="h-12 w-12 rounded-full"
        src={props.author.profilePicture}
        width={48}
        height={48}
      />
      <div>
        <div className="flex gap-2 text-slate-300">
          <span>{`@${props.author.username}`}</span>
          <span>Â·</span>
          <span className="font-thin">
            {dayjs(props.post.createdAt).fromNow()}
          </span>
        </div>
        <p>{props.post.content}</p>
      </div>
    </li>
  );
};

const Feed = () => {
  const { data, isLoading } = api.posts.getAll.useQuery();
  if (isLoading) return <LoadingSpinner size={60} />;
  if (!data) return <p>No Data</p>;

  return [...data, ...data]?.map(({ post, author }) => (
    <PostView key={post.authorId} post={post} author={author} />
  ));
};

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  // start fetching asap
  api.posts.getAll.useQuery();

  if (!userLoaded) {
    return <div />;
  }
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4 ">
            {isSignedIn ? (
              <>
                <SignOutButton />
                <CreatePostWizard />
              </>
            ) : (
              <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
            )}
          </div>

          <ul className="flex flex-col">
            <Feed />
          </ul>
        </div>
      </main>
    </>
  );
}
